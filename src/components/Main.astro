---
import data from '../utils/data.json';
import ButtonsContainer from './ButtonsContainer.astro';
import Information from './Information.astro';
import Highlights from './Highlights.astro';
import Visuals from './Visuals.astro';
import LinksContainer from './LinksContainer.astro';
import Menu from './Menu.astro';

const { name } = Astro.params;

const planet = data.find((planet) => planet.name === name)!;
---

<main class='flex flex-col self-stretch items-center relative'>
  <Menu />
  <LinksContainer border={planet.colors.border} />
  <Visuals images={planet.images} name={planet.name} />
  <div class='contents md:grid md:grid-cols-2 px-10 gap-10 self-stretch'>
    <Information
      name={planet.name}
      overview={planet.overview}
      structure={planet.structure}
      surface={planet.geology}
    />
    <ButtonsContainer border={planet.colors.border} background={planet.colors.background} />
  </div>
  <Highlights
    rotationTime={planet.rotation}
    revolutionTime={planet.revolution}
    radius={planet.radius}
    averageTemp={planet.temperature}
  />
</main>

<script define:vars={{ planet }} is:inline>
  const LinksContainer = document.getElementById('LinksContainer');
  const ButtonsContainer = document.getElementById('ButtonsContainer');

  function changeState(newState) {
    LinksContainer.setAttribute('data-state', newState);
    ButtonsContainer.setAttribute('data-state', newState);

    document
      .querySelectorAll('[data-name=Overview], [data-name=Surface], [data-name=Structure]')
      .forEach((section) => {
        section.classList.remove('flex');
        section.classList.add('hidden');
      });

    const activeVisual = document.querySelectorAll(`[data-name=${newState}]`)[0];
    if (activeVisual) {
      activeVisual.classList.add('flex');
      activeVisual.classList.remove('hidden');
    }

    const activeDesription = document.querySelectorAll(`[data-name=${newState}]`)[1];
    if (activeDesription) {
      activeDesription.classList.add('inline');
      activeDesription.classList.remove('hidden');
    }

    const activeResource = document.querySelectorAll(`[data-name=${newState}]`)[2];
    if (activeResource) {
      activeResource.classList.add('flex');
      activeResource.classList.remove('hidden');
    }

    const links = LinksContainer.querySelectorAll('button');
    const buttons = ButtonsContainer.querySelectorAll('button');

    links.forEach((link) => {
      if (link.dataset.state === LinksContainer.dataset.state) {
        link.classList.remove('opacity-50', 'border-transparent');
        link.classList.add(planet.colors.border, 'opacity-100');
      } else {
        link.classList.add('opacity-50', 'border-transparent');
        link.classList.remove(planet.colors.border, 'opacity-100');
      }
    });

    buttons.forEach((button) => {
      if (button.dataset.state === ButtonsContainer.dataset.state) {
        button.classList.remove('bg-transparent', 'border-white', 'border-opacity-20');
        button.classList.add(planet.colors.background, planet.colors.border);
      } else {
        button.classList.add('bg-transparent', 'border-white', 'border-opacity-20');
        button.classList.remove(planet.colors.background, planet.colors.border);
      }
    });
  }

  document.addEventListener('astro:page-load', () => {
    const links = LinksContainer.querySelectorAll('button');
    const buttons = ButtonsContainer.querySelectorAll('button');

    links.forEach((link) => {
      link.addEventListener('click', () => {
        changeState(link.dataset.state);
      });
    });

    buttons.forEach((button) => {
      button.addEventListener('click', () => {
        changeState(button.dataset.state);
      });
    });
  });
</script>
